import{a}from"./chunk-MDVFZHLF.mjs";import{a as t}from"./chunk-SAYYBWUX.mjs";import{z as e}from"zod";async function w(o){o.withTypeProvider().post("/events/:eventId/attendees",{schema:{summary:"Register an attendee for an event",tags:["Attendees"],body:e.object({name:e.string().min(4),email:e.string().email()}),params:e.object({eventId:e.string().uuid()}),response:{201:e.object({attendeeId:e.number()})}}},async(i,m)=>{let{eventId:n}=i.params,{name:s,email:d}=i.body,[r,c]=await Promise.all([t.event.findUnique({where:{id:n}}),t.attendee.count({where:{eventId:n}})]);if(r===null)throw new a("Event not found");if(r.maximumAttendees!==null&&c>=r.maximumAttendees)throw new a("Maximum attendees reached");if(await t.attendee.findUnique({where:{eventId_email:{eventId:n,email:d}}})!==null)throw new a("Attendee already registered");let u=await t.attendee.create({data:{name:s,email:d,eventId:n}});return m.code(201).send({attendeeId:u.id})})}export{w as a};
