// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  role      Role       @default(NON_CAREGIVER)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  jobs      Job[]      @relation("UserJobs")
  caregiver Caregiver?

  @@map("users")
}

model Job {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  userId       String        @map("user_id")
  user         User          @relation(fields: [userId], references: [id], name: "UserJobs")
  applications Application[]

  @@map("jobs")
}

model Caregiver {
  id           String        @id @default(uuid())
  name         String
  userId       String        @unique @map("user_id")
  user         User          @relation(fields: [userId], references: [id])
  applications Application[]

  @@map("caregivers")
}

model Application {
  id          Int       @id @default(autoincrement())
  caregiverId String    @map("caregiver_id")
  jobId       Int       @map("job_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  caregiver   Caregiver @relation(fields: [caregiverId], references: [id])
  job         Job       @relation(fields: [jobId], references: [id])

  @@map("applications")
}

enum Role {
  ADMIN
  NON_CAREGIVER
  CAREGIVER
}
